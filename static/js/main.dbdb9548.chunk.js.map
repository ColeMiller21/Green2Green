{"version":3,"sources":["components/SignInForm.js","components/SignUpForm.js","components/Navbar.js","components/Banner.js","components/ScoreModal.js","components/NewScoreModal.js","components/Homepage.js","components/LandingPage.js","App.js","index.js","images/golfball.png"],"names":["SignInForm","state","email","password","currentUser","submitError","handleInputChange","e","setState","target","name","value","onSubmit","preventDefault","console","log","user","axios","post","then","res","data","token","id","localStorage","setItem","JSON","stringify","getItem","props","history","push","catch","err","style","styles","background","className","formDiv","formStyle","fontFamily","TextField","label","this","onChange","margin","type","to","onClick","marginBottom","marginTop","color","fontSize","React","Component","backgroundColor","padding","borderRadius","boxShadow","minHeight","width","position","top","left","marginRight","transform","SignUpForm","confirmPassword","handleChange","newUser","alert","ValidatorForm","addValidationRule","removeValidationRule","ref","validators","errorMessages","navStyle","Navbar","isCurrentUser","cursor","userLogout","imageDiv","height","golfballImage","backgroundRepeat","backgroundPosition","backgroundSize","bannerText","Banner","handicapReached","totalHandicap","tillHandicap","NewScoreModal","courseName","frontNine","parseInt","backNine","courseRating","parseFloat","courseSlope","totalScore","numberInputChange","test","Number","newScore","_id","onHide","getScores","Modal","show","size","aria-labelledby","centered","Header","closeButton","Title","Body","Grid","container","spacing","item","xs","fullWidth","href","rel","Homepage","scores","getHandicap","length","calcScores","sort","a","b","forEach","score","total","slope","rating","calcHandicap","toFixed","averageHandicap","array","sum","i","finalHandicap","Math","round","put","getUserScores","get","clear","handleShow","handleClose","data-toggle","data-target","tableHeaders","scope","map","key","moment","createdAt","format","LandingPage","path","exact","component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dbdb9548.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport \"./mediastyles.css\";\r\n\r\n\r\nclass SignInForm extends React.Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        currentUser: {},\r\n        submitError: false\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"button clicked\")\r\n        //values from the input fields \r\n        let user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post(`/api/auth`, user)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    let data = res.data\r\n                    //setting currentUser to use the token in header of axios.get req\r\n                    this.setState({\r\n                        currentUser: {\r\n                            token: data.token,\r\n                            email: data.user.email,\r\n                            id: data.user.id\r\n                        }\r\n                    })\r\n                    ///////set local storage with token and user information///////\r\n                    localStorage.setItem('token', this.state.currentUser.token)\r\n                    console.log(JSON.stringify(localStorage.getItem('token')))\r\n                    //pushing to Homepage once user is given a token\r\n                    this.props.history.push('/home');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    this.setState({ submitError: true })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.background}>\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"heading\">Green 2 Green</h1>\r\n                </div>\r\n                <div style={styles.formDiv}>\r\n                    <div className=\"justify-content-md-center col-md-auto\" style={styles.formStyle}>\r\n                        <h1 className=\"text-center\" style={{ fontFamily: 'Rock Salt, cursive' }}>Sign In!</h1>\r\n\r\n                        <div className=\"text-center\">\r\n                            <TextField\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleInputChange}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <TextField\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleInputChange}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <Link to=\"/home\">\r\n                                <button type=\"button\" name=\"password\" onClick={this.onSubmit} className=\"btn btn-success\" style={{ marginBottom: '6px', marginTop: '15px' }} >Log In</button>\r\n                            </Link>\r\n                            <p>Not a member yet? Sign up <Link to=\"/signup\">here!</Link></p>\r\n                            {this.state.submitError ? <p style={{ color: 'red', fontSize: \"12px\" }}>Error logging up make sure information is correct </p> : <p></p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nconst styles = {\r\n    formStyle: {\r\n        backgroundColor: 'white',\r\n        padding: '2rem 3rem 2rem 3rem ',\r\n        borderRadius: '25px',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n    },\r\n    background: {\r\n        background: 'linear-gradient(226deg, rgb(15, 114, 68) 48%, rgb(17, 97, 73) 100%)',\r\n        minHeight: '100vh',\r\n        width: '100vw',\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    formDiv: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SignInForm;","import React from 'react';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './mediastyles.css';\r\n\r\nclass SignUpForm extends React.Component {\r\n    state = {\r\n\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: \"\",\r\n        submitError: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            if (value !== this.state.password) {\r\n                return false\r\n            }\r\n            return true;\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let newUser = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post(`/api/users`, newUser)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    console.log(res.data)\r\n                    let data = res.data;\r\n                    console.log(data.user.id)\r\n                    this.props.history.push('/');\r\n                } else {\r\n                    alert(\"Sign up unsuccessful\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err) {\r\n                    this.setState({ submitError: true })\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={styles.background}>\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"heading\">Green 2 Green</h1>\r\n                </div>\r\n                <div style={styles.formDiv}>\r\n                    <div className=\"justify-content-md-center col-md-auto\" style={styles.formStyle}>\r\n                        <h1 className=\"text-center\" style={{ fontFamily: 'Rock Salt, cursive' }}>Sign Up!</h1>\r\n\r\n                        <ValidatorForm\r\n                            ref=\"form\"\r\n                            onSubmit={this.onSubmit}\r\n                        >\r\n                            <div className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Email\"\r\n                                    onChange={this.handleChange}\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    validators={['required', 'isEmail']}\r\n                                    errorMessages={['this field is required', 'email is not valid']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Confirm Password\"\r\n                                    onChange={this.handleChange}\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    validators={['isPasswordMatch', 'required']}\r\n                                    errorMessages={['password mismatch', 'this field is required']}\r\n                                    value={this.state.confirmPassword}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"text-center\">\r\n                                <Link to=\"/home\">\r\n                                    <button type=\"button\" name=\"password\" onClick={this.onSubmit} className=\"btn btn-success\" style={{ marginBottom: '10px', marginTop: '20px' }} >Sign Up</button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                {this.state.submitError ? <p style={{ color: 'red', fontSize: \"12px\", fontFamily: 'Roboto, sans-serif' }}>Error signing up make sure information is correct </p> : <p></p>}\r\n                            </div>\r\n                        </ValidatorForm>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    formStyle: {\r\n        backgroundColor: 'white',\r\n        padding: '2rem 3.5rem 2rem 3.5rem',\r\n        borderRadius: '25px',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n    },\r\n    background: {\r\n        background: 'linear-gradient(226deg, rgb(15, 114, 68) 48%, rgb(17, 97, 73) 100%)',\r\n        minHeight: '100vh',\r\n        width: '100vw',\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    formDiv: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n\r\n","import React from 'react';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n\r\n        <nav style={styles.navStyle} className=\"navbar navbar-light bg-light\">\r\n            <span style={{ color: 'white', fontFamily: 'Rock Salt, cursive', fontSize: '1.3rem' }} className=\"navbar-brand mb-0 mx-auto h1\">Green 2 Green</span>\r\n            <ul className=\"nav n<li>Logout</li>avbar-nav navbar-right\">\r\n                {props.isCurrentUser ? <li style={{ fontFamily: 'Roboto, sans-serif', color: 'white', cursor: 'pointer' }} onClick={props.userLogout}><ExitToAppIcon /></li> : <li></li>}\r\n            </ul>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nconst styles = {\r\n    navStyle: {\r\n        background: 'linear-gradient(226deg, rgb(15, 114, 68) 48%, rgb(17, 97, 73) 100%)',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.3), 0 6px 20px 0 rgba(0, 0, 0, 0.19)'\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport golfballImage from \"../images/golfball.png\";\r\n\r\nconst Banner = (props) => {\r\n    return (\r\n        <div className=\"img-thumbnail\" style={styles.imageDiv}>\r\n            <div style={styles.bannerText}>\r\n\r\n                {props.handicapReached ?\r\n                    <div>\r\n                        <h1 style={{ fontSize: '6rem' }} className=\"text-center\">{props.currentUser.totalHandicap}</h1>\r\n                        <h1 style={{ fontSize: '1.5rem' }} className=\"text-center\">Handicap</h1>\r\n                    </div>\r\n                    : <div><h1 style={{ fontSize: '6rem' }} className=\"text-center\">00</h1>\r\n                        <h1 style={{ fontSize: '1.5rem' }} className=\"text-center\">Still need {props.tillHandicap} more scores!</h1></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    imageDiv: {\r\n        width: '100vw',\r\n        height: \"45vh\",\r\n        background:\r\n            `linear-gradient(rgba(0, 0, 0, 0.5),\r\n        rgba(0, 0, 0, 0.5)),\r\n    url(${golfballImage})`,\r\n        backgroundRepeat: 'no - repeat',\r\n        backgroundPosition: 'center center',\r\n        backgroundSize: 'cover'\r\n    },\r\n    bannerText: {\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: '30%',\r\n        left: '50%',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n}\r\n\r\n\r\nexport default Banner;","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass ScoreModal extends React.Component {\r\n\r\n    state = {\r\n        courseName: \"\",\r\n        front9: parseInt(0),\r\n        back9: parseInt(0),\r\n        courseRating: parseInt(0),\r\n        courseSlope: parseInt(0),\r\n        totalScore: parseInt(0)\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        if ([e.target.name] === \"\") {\r\n            e.target.value = 0\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ totalScore: Number(this.state.front9) + Number(this.state.back9) }, () => {\r\n            console.log(\"clicked\")\r\n\r\n            let newScore = {\r\n                //this will be the current user id\r\n                user: this.props.currentUser._id,\r\n                frontNine: this.state.front9,\r\n                backNine: this.state.back9,\r\n                // courseRating: this.state.courseRating,\r\n                // courseSlope: this.state.courseSlope,\r\n                totalScore: this.state.totalScore,\r\n                courseName: this.state.courseName\r\n            }\r\n\r\n            axios.post(`/api/scores`, newScore)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        courseName: \"\",\r\n                        front9: parseInt(0),\r\n                        back9: parseInt(0),\r\n                        courseRating: parseInt(0),\r\n                        courseSlope: parseInt(0),\r\n                        totalScore: parseInt(0)\r\n                    })\r\n                })\r\n                .catch(err => console.log(err))\r\n        })\r\n        this.props.onHide();\r\n        this.props.getScores();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter text-center\">\r\n                        <div className=\"text-center\">\r\n                            <h1>Insert New Score</h1>\r\n                        </div>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"row\">\r\n                        <div id=\"leftDiv\" className=\"col\">\r\n                            <label>Golf Course</label>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"text\" placeholder=\"ex. Cowboys Golf Course\" name=\"courseName\" value={this.state.courseName} onChange={this.handleInputChange} className=\"form-control\" aria-describedby=\"basic-addon3\" />\r\n                            </div>\r\n                            <label>Front 9</label>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"number\" name=\"front9\" min={0} value={this.state.front9} onChange={this.handleInputChange} className=\"form-control\" aria-describedby=\"basic-addon3\" />\r\n                            </div>\r\n                            <label>Back 9</label>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"number\" name=\"back9\" min={0} value={this.state.back9} onChange={this.handleInputChange} className=\"form-control\" aria-describedby=\"basic-addon3\" />\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"rightDiv\" className=\"col\">\r\n                            <label>Course Rating</label>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"number\" name=\"courseRating\" min={0} value={this.state.courseRating} onChange={this.handleInputChange} className=\"form-control\" aria-describedby=\"basic-addon3\" />\r\n                            </div>\r\n                            <label>Slope</label>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input type=\"number\" name=\"courseSlope\" min={0} value={this.state.courseSlope} onChange={this.handleInputChange} className=\"form-control\" aria-describedby=\"basic-addon3\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <h2>{parseInt(this.state.front9) + parseInt(this.state.back9)}</h2>\r\n                        <p>Total Score</p>\r\n                        <button type=\"button\" onClick={this.onSubmit} className=\"btn btn-success btn-block\" >Submit Score</button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default ScoreModal;","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from 'axios';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nclass NewScoreModal extends React.Component {\r\n\r\n    state = {\r\n        courseName: \"\",\r\n        frontNine: parseInt(0),\r\n        backNine: parseInt(0),\r\n        courseRating: parseFloat(0),\r\n        courseSlope: parseInt(0),\r\n        totalScore: parseInt(0),\r\n    }\r\n\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n\r\n    }\r\n\r\n    numberInputChange = (e) => {\r\n        if (e.target.value === '' || /^\\d+$/.test(e.target.value)) {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ totalScore: Number(this.state.frontNine) + Number(this.state.backNine) }, () => {\r\n            console.log(\"clicked\")\r\n\r\n            let newScore = {\r\n                //this will be the current user id\r\n                user: this.props.currentUser._id,\r\n                frontNine: this.state.frontNine,\r\n                backNine: this.state.backNine,\r\n                courseRating: this.state.courseRating,\r\n                courseSlope: this.state.courseSlope,\r\n                totalScore: this.state.totalScore,\r\n                courseName: this.state.courseName\r\n            }\r\n\r\n            axios.post(`/api/scores`, newScore)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({\r\n                        courseName: \"\",\r\n                        frontNine: parseInt(0),\r\n                        backNine: parseInt(0),\r\n                        courseRating: parseInt(0),\r\n                        courseSlope: parseInt(0),\r\n                        totalScore: parseInt(0)\r\n                    })\r\n                })\r\n                .catch(err => console.log(err))\r\n        })\r\n        this.props.onHide();\r\n        this.props.getScores();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter text-center\">\r\n                        <div className=\"text-center\">\r\n                            <h1>Insert New Score</h1>\r\n                        </div>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ValidatorForm\r\n                        ref=\"form\"\r\n                        onSubmit={this.onSubmit}\r\n                    >\r\n                        <Grid container spacing={4} className=\"text-center\">\r\n                            <Grid item xs={12} >\r\n                                <TextValidator\r\n                                    fullWidth\r\n                                    label=\"Course Name\"\r\n                                    onChange={this.handleInputChange}\r\n                                    name=\"courseName\"\r\n                                    type=\"text\"\r\n                                    value={this.state.courseName}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6} className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Front Nine\"\r\n                                    onChange={this.numberInputChange}\r\n                                    name=\"frontNine\"\r\n                                    type=\"text\"\r\n                                    value={this.state.frontNine}\r\n                                    validators={['minNumber:0', 'maxNumber:100']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6} className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Back Nine\"\r\n                                    onChange={this.numberInputChange}\r\n                                    name=\"backNine\"\r\n                                    type=\"text\"\r\n                                    value={this.state.backNine}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6} className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Course Rating\"\r\n                                    onChange={this.handleInputChange}\r\n                                    name=\"courseRating\"\r\n                                    type=\"text\"\r\n                                    value={this.state.courseRating}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6} className=\"text-center\">\r\n                                <TextValidator\r\n                                    label=\"Course Slope\"\r\n                                    onChange={this.numberInputChange}\r\n                                    name=\"courseSlope\"\r\n                                    type=\"text\"\r\n                                    value={this.state.courseSlope}\r\n                                    validators={['required']}\r\n                                    errorMessages={['this field is required']}\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"text-center\" style={{ marginTop: '25px' }}>\r\n                            <h2>{parseInt(this.state.frontNine) + parseInt(this.state.backNine)}</h2>\r\n                            <p>Total Score</p>\r\n                            <button type=\"button\" onClick={this.onSubmit} className=\"btn btn-success btn-block\" >Submit Score</button>\r\n                            <p>*All inputs must be filled out to properly access your handicap. If you need help read this <a href=\"https://golftips.golfweek.com/explanation-golf-scorecard-2458.html\" target=\"_blank\" rel=\"noopener noreferrer\">article!</a> </p>\r\n                        </div>\r\n                    </ValidatorForm>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default NewScoreModal;","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Banner from './Banner';\r\nimport ScoreModal from './ScoreModal';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport NewScoreModal from './NewScoreModal';\r\n\r\n\r\nclass Homepage extends React.Component {\r\n    state = {\r\n        show: false,\r\n        scores: [],\r\n        currentUser: {},\r\n        isCurrentUser: false,\r\n        handicapReached: false,\r\n        tillHandicap: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // grabbing current user from localstorage\r\n        // passing the signed in user token as a header\r\n        axios.get(`/api/auth/user`, { 'headers': { 'x-auth-token': localStorage.getItem('token') } })\r\n            .then(res => {\r\n                console.log(res.data)\r\n                // res.data is the the user object after being verified through the auth/user endpoint\r\n                if (res.data) {\r\n                    this.setState({ currentUser: res.data, isCurrentUser: true }, () => this.getUserScores());\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    getHandicap = () => {\r\n        // getting the length of scores to make sure there is enough to calculate handicap\r\n        console.log(this.state.scores.length)\r\n        console.log(this.state.currentUser)\r\n        if (this.state.scores.length < 3) {\r\n            let tillHandicap = 10 - this.state.scores.length\r\n            this.setState({ tillHandicap })\r\n            console.log(this.state.tillHandicap)\r\n        }\r\n        //has enough of a handicap and sorting scores from least to greatest\r\n        else {\r\n            let calcScores = [];\r\n            this.setState({\r\n                handicapReached: true,\r\n                scores: this.state.scores.sort((a, b) => parseInt(a.totalScore) - parseInt(b.totalScore))\r\n            })\r\n            //calculating handicap per score and putting them in a score array\r\n            this.state.scores.forEach(score => {\r\n                console.log({\r\n                    total: score.totalScore,\r\n                    slope: score.courseSlope,\r\n                    rating: score.courseRating\r\n                })\r\n                let calcHandicap = parseInt(score.totalScore) - parseInt(score.courseRating)\r\n                calcHandicap = calcHandicap * 113\r\n                calcHandicap = calcHandicap / score.courseSlope\r\n                calcHandicap = calcHandicap.toFixed(2)\r\n                console.log(calcHandicap)\r\n                calcScores.push(parseFloat(calcHandicap))\r\n\r\n            })\r\n\r\n            console.log(calcScores)\r\n            this.averageHandicap(calcScores)\r\n\r\n\r\n        }\r\n    }\r\n\r\n    //helper function to average out scores to create handicap\r\n    averageHandicap = (array) => {\r\n        let sum = 0;\r\n        for (let i = 0; i < array.length; i++) {\r\n            sum += array[i]\r\n        }\r\n        let finalHandicap = Math.round(sum / array.length)\r\n        console.log(finalHandicap)\r\n        console.log(this.state.currentUser._id)\r\n        //axios call to update user handicap\r\n        axios.put('/api/users/' + this.state.currentUser._id, { totalHandicap: finalHandicap })\r\n            .then(res => console.log(res.data));\r\n    }\r\n    //function to grab scores based on userId\r\n    getUserScores = () => {\r\n        let id = this.state.currentUser._id\r\n        console.log(id)\r\n        axios.get(`/api/scores/` + id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({ scores: res.data })\r\n                this.getHandicap();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    userLogout = () => {\r\n        //clearing localstorage when user signs out and redirecting to signin page\r\n        localStorage.clear();\r\n        this.setState({ isCurrentUser: false, currentUser: {} })\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    //Modal handel methods\r\n    handleShow = () => { this.setState({ show: true }) };\r\n    handleClose = () => { this.setState({ show: false }) };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar\r\n                    userLogout={this.userLogout}\r\n                    isCurrentUser={this.state.isCurrentUser} />\r\n\r\n                <Banner\r\n                    handicapReached={this.state.handicapReached}\r\n                    tillHandicap={this.state.tillHandicap}\r\n                    currentUser={this.state.currentUser} />\r\n                <div>\r\n                    <div>\r\n                        <h2 className=\"text-center\">Recent Scores</h2>\r\n                        <div className=\"col-md-2 offset-md-5\">\r\n                            <button style={{\r\n                                marginBottom: '5px', fontFamily: 'Roboto, sans-serif'\r\n                            }} onClick={this.handleShow} type=\"button\" className=\"btn btn-success btn-block\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                                + New Score\r\n                </button>\r\n                            <NewScoreModal\r\n                                getScores={this.getUserScores}\r\n                                currentUser={this.state.currentUser}\r\n                                show={this.state.show}\r\n                                onHide={this.handleClose} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <table className=\"table\" >\r\n                        <thead>\r\n                            <tr style={styles.tableHeaders}>\r\n                                <th scope=\"col\">Date</th>\r\n                                <th scope=\"col\">Total</th>\r\n                                <th scope=\"col\">Course Name</th>\r\n                                <th scope=\"col\">Front 9</th>\r\n                                <th scope=\"col\">Back 9</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.scores.map((score, i) => {\r\n                                return (\r\n                                    <tr key={\"uniqueKey\" + i}>\r\n                                        <th scope=\"row\" style={{ width: '20%' }}>{moment(score.createdAt).format('MM-DD-YY')}</th>\r\n                                        <td style={{ width: '10%' }}>{score.totalScore}</td>\r\n                                        <td style={{ width: '40%' }}>{score.courseName}</td>\r\n                                        <td style={{ width: '10%' }}>{score.frontNine}</td>\r\n                                        <td style={{ width: '10%' }}>{score.backNine}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    tableHeaders: {\r\n        fontSize: '1rem'\r\n    }\r\n}\r\n\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport SignInForm from './SignInForm';\r\nimport SignUpForm from './SignUpForm';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Homepage from '../components/Homepage';\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={SignInForm} />\r\n                    <Route path='/signup' component={SignUpForm} />\r\n                    {/* Change to ProtectedRoute */}\r\n                    <Route path='/home' component={Homepage} />\r\n                </Switch>\r\n\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LandingPage;","import React from 'react';\nimport LandingPage from './components/LandingPage';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/golfball.e1490b4a.png\";"],"sourceRoot":""}